// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_cach.proto

#ifndef PROTOBUF_message_5fcach_2eproto__INCLUDED
#define PROTOBUF_message_5fcach_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "chat.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_5fcach_2eproto();
void protobuf_AssignDesc_message_5fcach_2eproto();
void protobuf_ShutdownFile_message_5fcach_2eproto();

class ChannelMsgCach;
class MessageCach;

// ===================================================================

class MessageCach : public ::google::protobuf::Message {
 public:
  MessageCach();
  virtual ~MessageCach();

  MessageCach(const MessageCach& from);

  inline MessageCach& operator=(const MessageCach& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageCach& default_instance();

  void Swap(MessageCach* other);

  // implements Message ----------------------------------------------

  inline MessageCach* New() const { return New(NULL); }

  MessageCach* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageCach& from);
  void MergeFrom(const MessageCach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageCach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // repeated .IM.ChatPkt chat_message = 2;
  int chat_message_size() const;
  void clear_chat_message();
  static const int kChatMessageFieldNumber = 2;
  const ::IM::ChatPkt& chat_message(int index) const;
  ::IM::ChatPkt* mutable_chat_message(int index);
  ::IM::ChatPkt* add_chat_message();
  ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >*
      mutable_chat_message();
  const ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >&
      chat_message() const;

  // @@protoc_insertion_point(class_scope:IM.MessageCach)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt > chat_message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_5fcach_2eproto();
  friend void protobuf_AssignDesc_message_5fcach_2eproto();
  friend void protobuf_ShutdownFile_message_5fcach_2eproto();

  void InitAsDefaultInstance();
  static MessageCach* default_instance_;
};
// -------------------------------------------------------------------

class ChannelMsgCach : public ::google::protobuf::Message {
 public:
  ChannelMsgCach();
  virtual ~ChannelMsgCach();

  ChannelMsgCach(const ChannelMsgCach& from);

  inline ChannelMsgCach& operator=(const ChannelMsgCach& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMsgCach& default_instance();

  void Swap(ChannelMsgCach* other);

  // implements Message ----------------------------------------------

  inline ChannelMsgCach* New() const { return New(NULL); }

  ChannelMsgCach* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelMsgCach& from);
  void MergeFrom(const ChannelMsgCach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChannelMsgCach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 req_id() const;
  void set_req_id(::google::protobuf::int64 value);

  // repeated .IM.ChannelChatPkt channel_messages = 2;
  int channel_messages_size() const;
  void clear_channel_messages();
  static const int kChannelMessagesFieldNumber = 2;
  const ::IM::ChannelChatPkt& channel_messages(int index) const;
  ::IM::ChannelChatPkt* mutable_channel_messages(int index);
  ::IM::ChannelChatPkt* add_channel_messages();
  ::google::protobuf::RepeatedPtrField< ::IM::ChannelChatPkt >*
      mutable_channel_messages();
  const ::google::protobuf::RepeatedPtrField< ::IM::ChannelChatPkt >&
      channel_messages() const;

  // @@protoc_insertion_point(class_scope:IM.ChannelMsgCach)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 req_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::ChannelChatPkt > channel_messages_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_5fcach_2eproto();
  friend void protobuf_AssignDesc_message_5fcach_2eproto();
  friend void protobuf_ShutdownFile_message_5fcach_2eproto();

  void InitAsDefaultInstance();
  static ChannelMsgCach* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageCach

// optional int64 user_id = 1;
inline void MessageCach::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageCach::user_id() const {
  // @@protoc_insertion_point(field_get:IM.MessageCach.user_id)
  return user_id_;
}
inline void MessageCach::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.MessageCach.user_id)
}

// repeated .IM.ChatPkt chat_message = 2;
inline int MessageCach::chat_message_size() const {
  return chat_message_.size();
}
inline void MessageCach::clear_chat_message() {
  chat_message_.Clear();
}
inline const ::IM::ChatPkt& MessageCach::chat_message(int index) const {
  // @@protoc_insertion_point(field_get:IM.MessageCach.chat_message)
  return chat_message_.Get(index);
}
inline ::IM::ChatPkt* MessageCach::mutable_chat_message(int index) {
  // @@protoc_insertion_point(field_mutable:IM.MessageCach.chat_message)
  return chat_message_.Mutable(index);
}
inline ::IM::ChatPkt* MessageCach::add_chat_message() {
  // @@protoc_insertion_point(field_add:IM.MessageCach.chat_message)
  return chat_message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >*
MessageCach::mutable_chat_message() {
  // @@protoc_insertion_point(field_mutable_list:IM.MessageCach.chat_message)
  return &chat_message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >&
MessageCach::chat_message() const {
  // @@protoc_insertion_point(field_list:IM.MessageCach.chat_message)
  return chat_message_;
}

// -------------------------------------------------------------------

// ChannelMsgCach

// optional int64 req_id = 1;
inline void ChannelMsgCach::clear_req_id() {
  req_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ChannelMsgCach::req_id() const {
  // @@protoc_insertion_point(field_get:IM.ChannelMsgCach.req_id)
  return req_id_;
}
inline void ChannelMsgCach::set_req_id(::google::protobuf::int64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:IM.ChannelMsgCach.req_id)
}

// repeated .IM.ChannelChatPkt channel_messages = 2;
inline int ChannelMsgCach::channel_messages_size() const {
  return channel_messages_.size();
}
inline void ChannelMsgCach::clear_channel_messages() {
  channel_messages_.Clear();
}
inline const ::IM::ChannelChatPkt& ChannelMsgCach::channel_messages(int index) const {
  // @@protoc_insertion_point(field_get:IM.ChannelMsgCach.channel_messages)
  return channel_messages_.Get(index);
}
inline ::IM::ChannelChatPkt* ChannelMsgCach::mutable_channel_messages(int index) {
  // @@protoc_insertion_point(field_mutable:IM.ChannelMsgCach.channel_messages)
  return channel_messages_.Mutable(index);
}
inline ::IM::ChannelChatPkt* ChannelMsgCach::add_channel_messages() {
  // @@protoc_insertion_point(field_add:IM.ChannelMsgCach.channel_messages)
  return channel_messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::ChannelChatPkt >*
ChannelMsgCach::mutable_channel_messages() {
  // @@protoc_insertion_point(field_mutable_list:IM.ChannelMsgCach.channel_messages)
  return &channel_messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::ChannelChatPkt >&
ChannelMsgCach::channel_messages() const {
  // @@protoc_insertion_point(field_list:IM.ChannelMsgCach.channel_messages)
  return channel_messages_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fcach_2eproto__INCLUDED
